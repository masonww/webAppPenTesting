# 
# Perform a binary search on a sorted data set
#   with the comparison logic separated out
#   into the script block $targetIsGreaterThan
# Returns the found value,
#   or the closest value in the range
#   if the target is outside of the range

function Search-Binary {
param(
    [Parameter(Mandatory)]
    [ValidateScript({ $_.Ast.ParamBlock.Parameters.Count -eq 1 })]
    [ScriptBlock] $targetIsGreaterThan,
    [int] $lower = 0,
    [int] $upper = 1000
)
    
    while($lower -lt $upper)
    {
        $middle = [Math]::Floor(($lower+$upper)/2)
        if(&$targetIsGreaterThan $middle) {
            $lower = $middle + 1
        } else {
            $upper = $middle
        }
    }
    return $lower
}


######### Example
<#
$target = 5

#lambda with comparison logic
# taking in the tested value
# and returning a boolean
# of if it is too large or not
$isGT =
{
param($v)
    $target -gt $v
}

$found = Search-Binary $isGT

$found
#>
